'use strict';Object.defineProperty(exports,'__esModule',{value:true});const db_logger_1=require('../db-logger');const point_1=require('../models/point');const var_utils_1=require('../utils/var-utils');const sql_table_field_1=require('./sql-table-field');class SQLTableDataRow{constructor(obj){this.isEmpty=false;this.columns=new Array();if(!var_utils_1.DbVarUtils.isDefined(obj)){this.parseData(obj);}}parseData(obj){for(let key in obj){if(obj.hasOwnProperty(key)){this.addField(key,obj[key]);}}}addField(key,value){this.columns.push(new sql_table_field_1.SQLTableField(key,value));}getColumn(key){for(let i=0;i<this.columns.length;i++){let column=this.columns[i];if(column.name==key){return column;}}return null;}count(){return this.columns.length;}nullValue(key){let column=this.getColumn(key);if(column!=null){column.value=null;}}asStr(key){let column=this.getColumn(key);return column!=null?column.value:null;}asPoint(key){let column=this.getColumn(key);let res=column!=null?column.value:null;return new point_1.Point(0,0);}asNum(key){let value=this.asStr(key);if(value!=null){return parseInt(value);}return-1;}asDate(key){return new Date(key);}asInt(key){return this.asNum(key);}asBool(key){let result=false;try{let val=this.getColumn(key);result=Number.parseInt(val.value)===1;}catch(err){db_logger_1.DbLogger.logErrorMessage('getValAsBool ::',err);result=false;}return result;}asJson(){let data=this.columns!=null?this.columns:'NULL';return JSON.stringify(data);}}exports.SQLTableDataRow=SQLTableDataRow;