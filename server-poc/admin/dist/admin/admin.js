'use strict';Object.defineProperty(exports,'__esModule',{value:true});const express=require('express');const app=express();const http=require('http').Server(app);const cluster=require('cluster');const cpuCount=require('os').cpus().length;const os=require('os');let io=require('socket.io-client');const admin_settings_1=require('./admin-settings');const cli_logger_1=require('./cli/cli.logger');let vorpal=require('vorpal')();var ChatEvent;(function(ChatEvent){ChatEvent['CONNECT']='connect';ChatEvent['DISCONNECT']='disconnect';ChatEvent['MESSAGE']='message';}(ChatEvent=exports.ChatEvent||(exports.ChatEvent={})));class Admin{constructor(){this.init();}init(){console.log('initiating socket service');let url='http://localhost:'+admin_settings_1.AdminSettings.ServerPort;let socket=io.connect(url,{reconnect:true});socket.on('disconnect',function(socket){cli_logger_1.Logger.logRed('Disconnected');});socket.on('connect',function(socket){cli_logger_1.Logger.logGreen('Connected');});socket.on('message',function(data){cli_logger_1.Logger.logCyan('Message received',data);});vorpal.delimiter('topzap$').show();this.initVorpal();return this;}initVorpal(){const scope=this;vorpal.command('mess [str]').action(function(args,callback){let arg=args.str!=null?args.str:'';let dataPacket={'ident':arg,'type':'text','data':args};scope.sendMessage(ChatEvent.MESSAGE,dataPacket);callback();});}sendMessage(type,data,tag=''){let dataObject={'type':type,'data':data,'tag':tag};let jsonData=JSON.stringify(dataObject);console.log('OUT >>');console.log(jsonData);console.log(' ');this.socket.emit(ChatEvent.MESSAGE,jsonData);}send(message){console.log('emitting message: '+message);this.socket.emit('message',message);}disconnect(){this.socket.disconnect();}}exports.Admin=Admin;new Admin();