'use strict';Object.defineProperty(exports,'__esModule',{value:true});const cli_logger_1=require('../cli/cli.logger');const global_settings_1=require('../global.settings');const express=require('express');const bodyParser=require('body-parser');class IAdminServer{}exports.IAdminServer=IAdminServer;class AdminServer{constructor(){this.port=8081;this.app=express();this.initServer();}initServer(){this.app.set('view engine','ejs');this.app.use(bodyParser.json());this.app.use(bodyParser.urlencoded({extended:true}));this.app.use(function(req,res,next){res.header('Access-Control-Allow-Origin','*');res.header('Access-Control-Allow-Headers','Origin, X-Requested-With, Content-Type, Accept');next();});this.app.get('/',function(req,res){res.render('pages/index');});this.app.get('/about',function(req,res){res.render('pages/about');});let serverPort=global_settings_1.Global.Networking.adminPort;cli_logger_1.Logger.logGreen(`Initializing WebServer on Port ::`,serverPort);let server=this.app.listen(global_settings_1.Global.Networking.adminPort,()=>{cli_logger_1.Logger.logGreen('Calling app.listen\'s callback function.');const host=server.address().address;const port=server.address().port;cli_logger_1.Logger.logGreen('Admin App listening at:',host+' : '+serverPort);});cli_logger_1.Logger.logPurple('app.listen() executed.');}}exports.AdminServer=AdminServer;